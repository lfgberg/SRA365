setwd("E:/GitHub/SRA365/hw/hw7")
# Read in data and libraries
library(foreign)
library(leaps)
library(car)
hw7.data = read.csv("hw7-1.csv", header = TRUE)
# which variables best predict freq?
bestsubsets = regsubsets(freq ~ content_length + tcp_conversation_exchange
+ remote_ips + app_packets + dns_query_times)
subsets(bestsubsets, statistic = "adjr2")
# which variables best predict freq?
bestsubsets = regsubsets(freq ~ content_length + tcp_conversation_exchange
+ remote_ips + app_packets + dns_query_times, data = hw7.data)
subsets(bestsubsets, statistic = "adjr2")
subsets(bestsubsets, statistic = "adjr2")
library(car)
hw7.data = read.csv("hw7-1.csv", header = TRUE)
# which variables best predict freq?
bestsubsets = regsubsets(freq ~ content_length + tcp_conversation_exchange
+ remote_ips + app_packets + dns_query_times, data = hw7.data, nbest = 1)
subsets(bestsubsets, statistic = "adjr2")
subsets(bestsubsets, statistic = "adjr2")
# Create 5 different regression models
hw7.reg1 = lm(freq ~ dns_query_times, data = hw7.data)
summary(hw7.reg1)
hw7.reg2 = lm(freq ~ dns_query_times + remote_ips, data = hw7.data)
summary(hw7.reg2)
hw7.reg3 = lm(freq ~ dns_query_times + remote_ips + app_packets, data = hw7.data)
summary(hw7.reg3)
hw7.reg4 = lm(freq ~ dns_query_times + remote_ips + app_packets + content_length, data = hw7.data)
summary(hw7.reg4)
hw7.reg5 = lm(freq ~ dns_query_times + remote_ips + app_packets + content_length + tcp_conversation_exchange, data = hw7.data)
summary(hw7.reg5)
# eval model 5 for multicollinearity
cor(hw7.data[, c("dns_query_times", "remote_ips", "app_packets", "content_length", "tcp_conversation_exchange")]) # .8 or higher is bad
# vif for each
vif(hw7.reg5) # greater than 10 is concerning
1/vif(hw7.reg5) # tolerance - lower than .2 is sus lower than .1 is bad bad
# Read in data and libraries
library(foreign)
setwd("E:/GitHub/SRA365/labs/lab8")
lab8.data = read.csv("lab 8 sra 365 wc.csv", header = TRUE)
View(lab8.data)
# Make data_type a factor
lab8.data$data_type = as.factor(data$data_type)
lab8.data = read.csv("lab 8 sra 365 wc.csv", header = TRUE)
# Make data_type a factor
lab8.data$data_type = as.factor(data$data_type)
# Make data_type a factor
lab8.data$data_type = as.factor(lab8.data$data_type)
contrasts(lab8.data$data_type) <- contr.treatment(6, base = 3)
View(lab8.data)
lab8.data$data_type
contrasts(lab8.data$data_type)
contrasts(lab8.data$data_type) <- contr.treatment(6, base = 4)
contrasts(lab8.data$data_type)
lab8.reg = lm(fin_loss ~ data_type, data = lab8.data)
summary(lab8.reg)
contrasts(lab8.data$data_type)
lab8.reg = lm(fin_loss ~ data_type, data = lab8.data)
summary(lab8.reg)
# get means
round(tapply(lab8.data$fin_loss, lab8.data$data_type, mean, na.rm = TRUE), 3)
