setwd("~/GitHub/SRA365/in-class/L09")
# Packages and data
library(foreign)
data = read.delim("lab 9 sra 365 wc.dat", header = TRUE)
# Evaluate whether the number of records breached ("num_records") can be used to predict if an organization is fast or slow in detecting the breach ("dys_detect_v2").
reg = glm(dys_detect_v2 ~ num_records, data = data, family = binomial)
summary(reg)
# Packages and data
library(foreign)
dataFrame = read.delim("lab 9 sra 365 wc.dat", header = TRUE)
# Evaluate whether the number of records breached ("num_records") can be used to predict if an organization is fast or slow in detecting the breach ("dys_detect_v2").
reg = glm(dys_detect_v2 ~ num_records, data = dataFrame, family = "binomial")
# Packages and data
library(foreign)
library(car)
dataFrame = read.delim("lab 9 sra 365 wc.dat", header = TRUE)
# Evaluate whether the number of records breached ("num_records") can be used to predict if an organization is fast or slow in detecting the breach ("dys_detect_v2").
reg = glm(dys_detect_v2 ~ num_records, data = dataFrame, family = binomial)
View(dataFrame)
# Set level
dataFrame$dys_detect_v2 = relevel(dataFrame$dys_detect_v2, "Slow")
dataFrame$dys_detect_v2 = as.factor(dataFrame$dys_detect_v2)
# Evaluate whether the number of records breached ("num_records") can be used to predict if an organization is fast or slow in detecting the breach ("dys_detect_v2").
reg = glm(dys_detect_v2 ~ num_records, data = dataFrame, family = binomial)
summary(reg)
1-2
1-346.50/346.52
1/(1+(exp(-(1.998789+(0.001865*20)))))
